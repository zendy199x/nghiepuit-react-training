{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/components/TaskList.js\";\nimport React, { Component } from \"react\";\nimport TaskItem from \"./TaskItem\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./../actions/index\";\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const filter = {\n        name: name === \"filterName\" ? value : this.state.filterName,\n        status: name === \"filterStatus\" ? value : this.state.filterStatus\n      };\n      this.props.onFilterTable(filter);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    let _this$props = this.props,\n        tasks = _this$props.tasks,\n        filterTable = _this$props.filterTable,\n        keyword = _this$props.keyword,\n        sort = _this$props.sort; // filter on table\n\n    if (filterTable.name) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterTable.status === -1) {\n        return task;\n      } else {\n        return task.status === (filterTable.status === 1 ? true : false);\n      }\n    }); // search\n\n    tasks = tasks.filter(task => {\n      return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n    }); // sort\n\n    if (sort.by === \"name\") {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sort.value;else if (a.name < b.name) return -sort.value;else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sort.value;else if (a.status < b.status) return sort.value;else return 0;\n      });\n    }\n\n    const elmTasks = tasks.map((task, index) => {\n      return React.createElement(TaskItem, {\n        key: task.id,\n        task: task,\n        index: index + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"STT\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"T\\xEAn\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng Th\\xE1i\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"H\\xE0nh \\u0110\\u1ED9ng\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"filterName\",\n      onChange: this.onChange,\n      value: this.state.filerName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"filterStatus\",\n      onChange: this.onChange,\n      value: this.state.filterStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"T\\u1EA5t C\\u1EA3\"), React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"\\u1EA8n\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"K\\xEDch Ho\\u1EA1t\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), elmTasks))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable,\n    keyword: state.search,\n    sort: state.sort\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/components/TaskList.js"],"names":["React","Component","TaskItem","connect","actions","TaskList","constructor","props","onChange","event","target","name","value","type","checked","filter","state","filterName","status","filterStatus","onFilterTable","setState","render","tasks","filterTable","keyword","sort","task","toLowerCase","indexOf","by","a","b","elmTasks","map","index","id","filerName","mapStateToProps","search","mapDispatchToProps","dispatch","filterTask"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport TaskItem from \"./TaskItem\"\nimport {connect} from \"react-redux\"\nimport * as actions from \"./../actions/index\"\n\nclass TaskList extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tfilterName: \"\",\n\t\t\tfilterStatus: -1\n\t\t}\n\t}\n\n\tonChange = event => {\n\t\tconst target = event.target\n\t\tconst name = target.name\n\t\tconst value = target.type === \"checkbox\" ? target.checked : target.value\n\t\tconst filter = {\n\t\t\tname: name === \"filterName\" ? value : this.state.filterName,\n\t\t\tstatus: name === \"filterStatus\" ? value : this.state.filterStatus\n\t\t}\n\t\tthis.props.onFilterTable(filter)\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t})\n\t}\n\n\trender() {\n\t\tlet {tasks, filterTable, keyword, sort} = this.props\n\t\t// filter on table\n\t\tif (filterTable.name) {\n\t\t\ttasks = tasks.filter(task => {\n\t\t\t\treturn (\n\t\t\t\t\ttask.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\n\t\ttasks = tasks.filter(task => {\n\t\t\tif (filterTable.status === -1) {\n\t\t\t\treturn task\n\t\t\t} else {\n\t\t\t\treturn task.status === (filterTable.status === 1 ? true : false)\n\t\t\t}\n\t\t})\n\n\t\t// search\n\t\ttasks = tasks.filter(task => {\n\t\t\treturn task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1\n\t\t})\n\n\t\t// sort\n\t\tif (sort.by === \"name\") {\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tif (a.name > b.name) return sort.value\n\t\t\t\telse if (a.name < b.name) return -sort.value\n\t\t\t\telse return 0\n\t\t\t})\n\t\t} else {\n\t\t\ttasks.sort((a, b) => {\n\t\t\t\tif (a.status > b.status) return -sort.value\n\t\t\t\telse if (a.status < b.status) return sort.value\n\t\t\t\telse return 0\n\t\t\t})\n\t\t}\n\n\t\tconst elmTasks = tasks.map((task, index) => {\n\t\t\treturn <TaskItem key={task.id} task={task} index={index + 1} />\n\t\t})\n\n\t\treturn (\n\t\t\t<div className=\"row mt-15\">\n\t\t\t\t<div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n\t\t\t\t\t<table className=\"table table-bordered table-hover\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th className=\"text-center\">STT</th>\n\t\t\t\t\t\t\t\t<th className=\"text-center\">Tên</th>\n\t\t\t\t\t\t\t\t<th className=\"text-center\">Trạng Thái</th>\n\t\t\t\t\t\t\t\t<th className=\"text-center\">Hành Động</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tname=\"filterName\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.filerName}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tname=\"filterStatus\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.filterStatus}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<option value={-1}>Tất Cả</option>\n\t\t\t\t\t\t\t\t\t\t<option value={0}>Ẩn</option>\n\t\t\t\t\t\t\t\t\t\t<option value={1}>Kích Hoạt</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t{elmTasks}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\ttasks: state.tasks,\n\t\tfilterTable: state.filterTable,\n\t\tkeyword: state.search,\n\t\tsort: state.sort\n\t}\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonFilterTable: filter => {\n\t\t\tdispatch(actions.filterTask(filter))\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList)\n"]},"metadata":{},"sourceType":"module"}