{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/components/TaskList.js\";\nimport React, { Component } from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport * as actions from './../actions/index';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = event => {\n      var target = event.target;\n      var name = target.name;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var filter = {\n        name: name === 'filterName' ? value : this.state.filterName,\n        status: name === 'filterStatus' ? value : this.state.filterStatus\n      };\n      this.props.onFilterTable(filter);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      filterName: '',\n      filterStatus: -1\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        tasks = _this$props.tasks,\n        filterTable = _this$props.filterTable,\n        keyword = _this$props.keyword,\n        sort = _this$props.sort; // filter on table\n\n    if (filterTable.name) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1;\n      });\n    }\n\n    tasks = tasks.filter(task => {\n      if (filterTable.status === -1) {\n        return task;\n      } else {\n        return task.status === (filterTable.status === 1 ? true : false);\n      }\n    }); // search\n\n    tasks = tasks.filter(task => {\n      return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n    }); // sort\n\n    if (sort.by === 'name') {\n      tasks.sort((a, b) => {\n        if (a.name > b.name) return sort.value;else if (a.name < b.name) return -sort.value;else return 0;\n      });\n    } else {\n      tasks.sort((a, b) => {\n        if (a.status > b.status) return -sort.value;else if (a.status < b.status) return sort.value;else return 0;\n      });\n    }\n\n    var elmTasks = tasks.map((task, index) => {\n      return React.createElement(TaskItem, {\n        key: task.id,\n        task: task,\n        index: index + 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"row mt-15\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"STT\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"T\\xEAn\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng Th\\xE1i\"), React.createElement(\"th\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"H\\xE0nh \\u0110\\u1ED9ng\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"filterName\",\n      onChange: this.onChange,\n      value: this.state.filerName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"filterStatus\",\n      onChange: this.onChange,\n      value: this.state.filterStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"T\\u1EA5t C\\u1EA3\"), React.createElement(\"option\", {\n      value: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\u1EA8n\"), React.createElement(\"option\", {\n      value: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"K\\xEDch Ho\\u1EA1t\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), elmTasks))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasks,\n    filterTable: state.filterTable,\n    keyword: state.search,\n    sort: state.sort\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onFilterTable: filter => {\n      dispatch(actions.filterTask(filter));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/components/TaskList.js"],"names":["React","Component","TaskItem","connect","actions","TaskList","constructor","props","onChange","event","target","name","value","type","checked","filter","state","filterName","status","filterStatus","onFilterTable","setState","render","tasks","filterTable","keyword","sort","task","toLowerCase","indexOf","by","a","b","elmTasks","map","index","id","filerName","mapStateToProps","search","mapDispatchToProps","dispatch","filterTask"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TaskItem from './TaskItem';\nimport { connect } from 'react-redux';\nimport * as actions from './../actions/index';\n\nclass TaskList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            filterName : '',\n            filterStatus : -1\n        };\n    }\n\n    onChange = (event) => {\n        var target = event.target;\n        var name = target.name;\n        var value = target.type === 'checkbox' ? target.checked : target.value;\n        var filter = {\n            name : name === 'filterName' ? value : this.state.filterName,\n            status : name === 'filterStatus' ? value : this.state.filterStatus\n        };\n        this.props.onFilterTable(filter);\n        this.setState({\n            [name] : value\n        });\n    }\n\n    render() {\n        var { tasks, filterTable, keyword, sort } = this.props;\n        // filter on table\n        if(filterTable.name){\n            tasks = tasks.filter((task) => {\n                return task.name.toLowerCase().indexOf(filterTable.name.toLowerCase()) !== -1\n            });\n        }\n\n        tasks = tasks.filter((task) => {\n            if(filterTable.status === -1){\n                return task;\n            }else{\n                return task.status\n                === (filterTable.status === 1 ? true : false);\n            }\n        });\n\n        // search\n        tasks = tasks.filter((task) => {\n            return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n        });\n\n        // sort\n        if(sort.by === 'name'){\n            tasks.sort((a, b) => {\n                if(a.name > b.name) return sort.value;\n                else if(a.name < b.name) return -sort.value;\n                else return 0;\n            });\n        }else{\n            tasks.sort((a, b) => {\n                if(a.status > b.status) return -sort.value;\n                else if(a.status < b.status) return sort.value;\n                else return 0;\n            });\n        }\n\n        var elmTasks = tasks.map((task, index) => {\n            return (\n                <TaskItem\n                    key={task.id}\n                    task={task}\n                    index={index + 1}\n                />\n            )\n        });\n\n        return (\n            <div className=\"row mt-15\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <table className=\"table table-bordered table-hover\">\n                        <thead>\n                            <tr>\n                                <th className=\"text-center\">STT</th>\n                                <th className=\"text-center\">Tên</th>\n                                <th className=\"text-center\">Trạng Thái</th>\n                                <th className=\"text-center\">Hành Động</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td></td>\n                                <td>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"filterName\"\n                                        onChange={ this.onChange }\n                                        value={ this.state.filerName }\n                                    />\n                                </td>\n                                <td>\n                                    <select\n                                        className=\"form-control\"\n                                        name=\"filterStatus\"\n                                        onChange={ this.onChange }\n                                        value={ this.state.filterStatus }\n                                    >\n                                        <option value={-1}>Tất Cả</option>\n                                        <option value={0}>Ẩn</option>\n                                        <option value={1}>Kích Hoạt</option>\n                                    </select>\n                                </td>\n                                <td></td>\n                            </tr>\n                            { elmTasks }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        tasks : state.tasks,\n        filterTable : state.filterTable,\n        keyword : state.search,\n        sort : state.sort\n    }\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onFilterTable : (filter) => {\n            dispatch(actions.filterTask(filter));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList);"]},"metadata":{},"sourceType":"module"}