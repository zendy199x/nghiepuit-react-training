{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      this.props.onToggleForm();\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      this.setState({\n        filterName: filterName,\n        filterStatus: filterStatus\n      });\n    };\n\n    this.onSelectedItem = item => {\n      this.setState({\n        itemEditing: item,\n        isDisplayForm: true\n      });\n    };\n\n    this.state = {\n      sortBy: 'name',\n      sortValue: 'asc',\n      filterName: '',\n      filterStatus: '-1',\n      itemEditing: null\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          sortBy = _this$state.sortBy,\n          sortValue = _this$state.sortValue,\n          filterName = _this$state.filterName,\n          filterStatus = _this$state.filterStatus,\n          itemEditing = _this$state.itemEditing;\n    const isDisplayForm = this.props.isDisplayForm; // tasks = filter(tasks, (task) => {\n    //     return includes(task.name.toLowerCase(), keyword.toLowerCase());\n    // });\n    // if(filterName){\n    //     tasks = filter(tasks, (task) => {\n    //         return includes(task.name.toLowerCase(), filterName.toLowerCase());\n    //     });\n    // }\n    // if(filterStatus){\n    //     tasks = filter(tasks, (task) => {\n    //         if(filterStatus === '-1' || filterStatus === -1){\n    //             return task;\n    //         }else{\n    //             return task.status === (parseInt(filterStatus, 10) === 1 ? true : false);\n    //         }\n    //     });\n    // }\n    // tasks = orderBy(tasks, [sortBy], [sortValue]);\n\n    var elmForm = isDisplayForm === true ? React.createElement(TaskForm, {\n      itemEditing: itemEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm === true ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(TaskForm, {\n      itemEditing: itemEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(TaskControl, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sortBy: sortBy,\n      sortValue: sortValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      filterName: filterName,\n      filterStatus: filterStatus,\n      onFilter: this.onFilter,\n      onSelectedItem: this.onSelectedItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","connect","actions","App","constructor","props","onToggleForm","onSearch","keyword","setState","onSort","sortBy","sortValue","onFilter","filterName","filterStatus","onSelectedItem","item","itemEditing","isDisplayForm","state","render","elmForm","mapStateToProps","mapDispatchToProps","dispatch","toggleForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy : 'name',\n            sortValue : 'asc',\n            filterName : '',\n            filterStatus : '-1',\n            itemEditing : null\n        };\n    }\n\n    onToggleForm = () => {\n        this.props.onToggleForm();\n    }\n\n    onSearch = (keyword) => {\n        this.setState({\n            keyword : keyword\n        });\n    }\n\n    onSort = (sortBy, sortValue) => {\n        this.setState({\n            sortBy : sortBy,\n            sortValue : sortValue\n        });\n    }\n\n    onFilter = (filterName, filterStatus) => {\n        this.setState({\n            filterName : filterName,\n            filterStatus : filterStatus\n        });\n    }\n\n    onSelectedItem = (item) => {\n        this.setState({\n            itemEditing : item,\n            isDisplayForm : true\n        })\n    }\n\n    render() {\n        const { sortBy, sortValue, filterName, filterStatus, itemEditing } = this.state;\n        const { isDisplayForm } = this.props;\n        // tasks = filter(tasks, (task) => {\n        //     return includes(task.name.toLowerCase(), keyword.toLowerCase());\n        // });\n        // if(filterName){\n        //     tasks = filter(tasks, (task) => {\n        //         return includes(task.name.toLowerCase(), filterName.toLowerCase());\n        //     });\n        // }\n        // if(filterStatus){\n        //     tasks = filter(tasks, (task) => {\n        //         if(filterStatus === '-1' || filterStatus === -1){\n        //             return task;\n        //         }else{\n        //             return task.status === (parseInt(filterStatus, 10) === 1 ? true : false);\n        //         }\n        //     });\n        // }\n        // tasks = orderBy(tasks, [sortBy], [sortValue]);\n        var elmForm = isDisplayForm === true ? <TaskForm\n                                                    itemEditing={ itemEditing }\n                                                    /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayForm === true ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                    <TaskForm\n                                                    itemEditing={ itemEditing }\n                                                    />\n                    </div>\n                    <div className={ isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n                        </button>\n                        <TaskControl\n                            onSearch={this.onSearch}\n                            onSort={this.onSort}\n                            sortBy={sortBy}\n                            sortValue={sortValue}\n                        />\n                        <TaskList\n                            filterName={filterName}\n                            filterStatus={filterStatus}\n                            onFilter={this.onFilter}\n                            onSelectedItem={this.onSelectedItem}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayForm: state.isDisplayForm\n    }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onToggleForm: () => {\n            dispatch(actions.toggleForm())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);"]},"metadata":{},"sourceType":"module"}