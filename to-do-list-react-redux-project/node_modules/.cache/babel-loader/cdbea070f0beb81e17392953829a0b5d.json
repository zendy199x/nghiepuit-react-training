{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport { findIndex, remove } from 'lodash';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onUpdateStatus = id => {\n      var tasks = this.state.tasks;\n      var index = findIndex(tasks, {\n        id: id\n      });\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onSave = data => {\n      var tasks = this.state.tasks;\n      data.status = data.status === 'true' ? true : false;\n\n      if (data.id === '') {\n        data.id = this.guid();\n        tasks.push(data);\n      } else {\n        var index = findIndex(tasks, {\n          id: data.id\n        });\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onToggleForm = () => {\n      if (this.state.itemEditing !== null) {\n        console.log('th1');\n        this.setState({\n          itemEditing: null\n        });\n      } else {\n        this.setState({\n          isShowingForm: !this.state.isShowingForm\n        });\n      }\n    };\n\n    this.onExitForm = () => {\n      this.setState({\n        isShowingForm: false,\n        itemEditing: null\n      });\n    };\n\n    this.onDeleteTask = id => {\n      var tasks = this.state.tasks;\n      remove(tasks, {\n        id: id\n      });\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      this.setState({\n        filterName: filterName,\n        filterStatus: filterStatus\n      });\n    };\n\n    this.onSelectedItem = item => {\n      this.setState({\n        itemEditing: item,\n        isShowingForm: true\n      });\n    };\n\n    this.state = {\n      isShowingForm: false,\n      sortBy: 'name',\n      sortValue: 'asc',\n      filterName: '',\n      filterStatus: '-1',\n      itemEditing: null\n    };\n  }\n\n  render() {\n    var _this$state = this.state,\n        isShowingForm = _this$state.isShowingForm,\n        sortBy = _this$state.sortBy,\n        sortValue = _this$state.sortValue,\n        filterName = _this$state.filterName,\n        filterStatus = _this$state.filterStatus,\n        itemEditing = _this$state.itemEditing; // tasks = filter(tasks, (task) => {\n    //     return includes(task.name.toLowerCase(), keyword.toLowerCase());\n    // });\n    // if(filterName){\n    //     tasks = filter(tasks, (task) => {\n    //         return includes(task.name.toLowerCase(), filterName.toLowerCase());\n    //     });\n    // }\n    // if(filterStatus){\n    //     tasks = filter(tasks, (task) => {\n    //         if(filterStatus === '-1' || filterStatus === -1){\n    //             return task;\n    //         }else{\n    //             return task.status === (parseInt(filterStatus, 10) === 1 ? true : false);\n    //         }\n    //     });\n    // }\n    // tasks = orderBy(tasks, [sortBy], [sortValue]);\n\n    var elmForm = isShowingForm === true ? React.createElement(TaskForm, {\n      onExitForm: this.onExitForm,\n      itemEditing: itemEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isShowingForm === true ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, elmForm), React.createElement(\"div\", {\n      className: isShowingForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(TaskControl, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sortBy: sortBy,\n      sortValue: sortValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      onUpdateStatus: this.onUpdateStatus,\n      onDeleteTask: this.onDeleteTask,\n      filterName: filterName,\n      filterStatus: filterStatus,\n      onFilter: this.onFilter,\n      onSelectedItem: this.onSelectedItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","findIndex","remove","App","constructor","props","onUpdateStatus","id","tasks","state","index","status","setState","localStorage","setItem","JSON","stringify","onSave","data","guid","push","onToggleForm","itemEditing","console","log","isShowingForm","onExitForm","onDeleteTask","onSearch","keyword","onSort","sortBy","sortValue","onFilter","filterName","filterStatus","onSelectedItem","item","render","elmForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport { findIndex, remove } from 'lodash';\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShowingForm : false,\n            sortBy : 'name',\n            sortValue : 'asc',\n            filterName : '',\n            filterStatus : '-1',\n            itemEditing : null\n        };\n    }\n\n    onUpdateStatus = (id) => {\n        var tasks = this.state.tasks;\n        var index = findIndex(tasks, { id : id });\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n            tasks : tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onSave = (data) => {\n        var tasks = this.state.tasks;\n        data.status = data.status === 'true' ? true : false;\n        if(data.id === ''){\n            data.id = this.guid();\n            tasks.push(data);\n        }else{\n            var index = findIndex(tasks, { id : data.id })\n            tasks[index] = data;\n        }\n        this.setState({\n            tasks : tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onToggleForm = () => {\n        if(this.state.itemEditing !== null){\n            console.log('th1')\n            this.setState({\n                itemEditing : null\n            });\n        }else{\n            this.setState({\n                isShowingForm : !this.state.isShowingForm\n            });\n        }\n    }\n\n    onExitForm = () =>{\n        this.setState({\n            isShowingForm : false,\n            itemEditing : null\n        });\n    }\n\n    onDeleteTask = (id) => {\n        var tasks = this.state.tasks;\n        remove(tasks, { id : id });\n        this.setState({\n            tasks : tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onSearch = (keyword) => {\n        this.setState({\n            keyword : keyword\n        });\n    }\n\n    onSort = (sortBy, sortValue) => {\n        this.setState({\n            sortBy : sortBy,\n            sortValue : sortValue\n        });\n    }\n\n    onFilter = (filterName, filterStatus) => {\n        this.setState({\n            filterName : filterName,\n            filterStatus : filterStatus\n        });\n    }\n\n    onSelectedItem = (item) => {\n        this.setState({\n            itemEditing : item,\n            isShowingForm : true\n        })\n    }\n\n    render() {\n        var { isShowingForm, sortBy, sortValue, filterName, filterStatus, itemEditing } = this.state;\n        // tasks = filter(tasks, (task) => {\n        //     return includes(task.name.toLowerCase(), keyword.toLowerCase());\n        // });\n        // if(filterName){\n        //     tasks = filter(tasks, (task) => {\n        //         return includes(task.name.toLowerCase(), filterName.toLowerCase());\n        //     });\n        // }\n        // if(filterStatus){\n        //     tasks = filter(tasks, (task) => {\n        //         if(filterStatus === '-1' || filterStatus === -1){\n        //             return task;\n        //         }else{\n        //             return task.status === (parseInt(filterStatus, 10) === 1 ? true : false);\n        //         }\n        //     });\n        // }\n        // tasks = orderBy(tasks, [sortBy], [sortValue]);\n        var elmForm = isShowingForm === true ? <TaskForm\n                                                    onExitForm={this.onExitForm}\n                                                    itemEditing={ itemEditing }\n                                                    /> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isShowingForm === true ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                        { elmForm }\n                    </div>\n                    <div className={ isShowingForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n                        </button>\n                        <TaskControl\n                            onSearch={this.onSearch}\n                            onSort={this.onSort}\n                            sortBy={sortBy}\n                            sortValue={sortValue}\n                        />\n                        <TaskList\n                            onUpdateStatus={this.onUpdateStatus}\n                            onDeleteTask={this.onDeleteTask}\n                            filterName={filterName}\n                            filterStatus={filterStatus}\n                            onFilter={this.onFilter}\n                            onSelectedItem={this.onSelectedItem}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}