{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onToggleForm = () => {\n      const itemEditing = this.props.itemEditing;\n\n      if (itemEditing && itemEditing.id !== '') {\n        this.props.onOpenForm();\n      } else {\n        this.props.onToggleForm();\n      }\n\n      this.props.onClearTask({\n        id: '',\n        name: '',\n        status: false\n      });\n    };\n  }\n\n  render() {\n    const isDisplayForm = this.props.isDisplayForm;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm === true ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(TaskForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(TaskControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onClearTask: task => {\n      dispatch(actions.editTask(task));\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","connect","actions","App","onToggleForm","itemEditing","props","id","onOpenForm","onClearTask","name","status","render","isDisplayForm","mapStateToProps","state","mapDispatchToProps","dispatch","toggleForm","task","editTask","openForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport TaskControl from './components/TaskControl';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\n\nclass App extends Component {\n\n    // toggle redux\n    onToggleForm = () => {\n        const { itemEditing } = this.props;\n        if(itemEditing && itemEditing.id !== ''){\n            this.props.onOpenForm();\n        }else{\n            this.props.onToggleForm();\n        }\n        this.props.onClearTask({\n            id : '',\n            name : '',\n            status : false\n        });\n    }\n\n    render() {\n\n        const { isDisplayForm } = this.props;\n\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayForm === true ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4' : '' }>\n                        <TaskForm />\n                    </div>\n                    <div className={ isDisplayForm === true ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8' : 'col-xs-12 col-sm-12 col-md-12 col-lg-12' }>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm} >\n                            <span className=\"fa fa-plus mr-5\"></span>\n                            Thêm Công Việc\n                        </button>\n                        <TaskControl />\n                        <TaskList />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isDisplayForm : state.isDisplayForm,\n        itemEditing : state.itemEditing\n    };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onToggleForm : () => {\n            dispatch(actions.toggleForm());\n        },\n        onClearTask : (task) => {\n            dispatch(actions.editTask(task));\n        },\n        onOpenForm : () => {\n            dispatch(actions.openForm());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}