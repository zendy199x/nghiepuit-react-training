{"ast":null,"code":"import * as types from './../contains/ActionTypes';\n\nconst s4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n};\n\nconst randomID = () => {\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n};\n\nconst data = JSON.parse(localStorage.getItem(\"tasks\"));\nconst initialState = data ? data : [];\n\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_ALL:\n      return state;\n\n    case types.ADD_TASK:\n      console.log(action);\n      const newTask = {\n        id: randomID(),\n        name: action.task.name,\n        status: action.task.status\n      };\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/reducers/tasks.js"],"names":["types","s4","Math","floor","random","toString","substring","randomID","data","JSON","parse","localStorage","getItem","initialState","myReducer","state","action","type","LIST_ALL","ADD_TASK","console","log","newTask","id","name","task","status"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;;AAEA,MAAMC,EAAE,GAAG,MAAM;AACb,SAAQC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACE,MAAL,EAAL,IAAsB,OAAjC,EAA0CC,QAA1C,CAAmD,EAAnD,EAAuDC,SAAvD,CAAiE,CAAjE,CAAR;AACH,CAFD;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AACnB,SAAON,EAAE,KAAKA,EAAE,EAAT,GAAc,GAAd,GAAoBA,EAAE,EAAtB,GAA2B,GAA3B,GAAiCA,EAAE,EAAnC,GAAwC,GAAxC,GAA8CA,EAAE,EAAhD,GAAqD,GAArD,GAA2DA,EAAE,EAA7D,GAAkEA,EAAE,EAApE,GAAyEA,EAAE,EAAlF;AACH,CAFD;;AAIA,MAAMO,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAb;AACA,MAAMC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAnC;;AAEA,MAAMM,SAAS,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAChD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKjB,KAAK,CAACkB,QAAX;AACI,aAAOH,KAAP;;AACJ,SAAKf,KAAK,CAACmB,QAAX;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,YAAMM,OAAO,GAAG;AACZC,QAAAA,EAAE,EAAEhB,QAAQ,EADA;AAEZiB,QAAAA,IAAI,EAAER,MAAM,CAACS,IAAP,CAAYD,IAFN;AAGZE,QAAAA,MAAM,EAAEV,MAAM,CAACS,IAAP,CAAYC;AAHR,OAAhB;AAKA,aAAOX,KAAP;;AACJ;AAAS,aAAOA,KAAP;AAXb;AAaH,CAdD;;AAgBA,eAAeD,SAAf","sourcesContent":["import * as types from './../contains/ActionTypes';\n\nconst s4 = () => {\n    return  Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n}\n\nconst randomID = () => {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\nconst data = JSON.parse(localStorage.getItem(\"tasks\"))\nconst initialState = data ? data : [];\n\nconst myReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case types.LIST_ALL:\n            return state;\n        case types.ADD_TASK:\n            console.log(action)\n            const newTask = {\n                id: randomID(),\n                name: action.task.name,\n                status: action.task.status\n            }\n            return state;\n        default: return state;\n    }\n}\n\nexport default myReducer;"]},"metadata":{},"sourceType":"module"}