{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport TaskControl from \"./components/TaskControl\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      this.props.onToggleForm();\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sortBy: sortBy,\n        sortValue: sortValue\n      });\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      this.setState({\n        filterName: filterName,\n        filterStatus: filterStatus\n      });\n    };\n\n    this.onSelectedItem = item => {\n      this.setState({\n        itemEditing: item,\n        isDisplayForm: true\n      });\n    };\n\n    this.state = {\n      sortBy: \"name\",\n      sortValue: \"asc\",\n      filterName: \"\",\n      filterStatus: \"-1\",\n      itemEditing: null\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          sortBy = _this$state.sortBy,\n          sortValue = _this$state.sortValue,\n          filterName = _this$state.filterName,\n          filterStatus = _this$state.filterStatus;\n    const isDisplayForm = this.props.isDisplayForm; // tasks = filter(tasks, (task) => {\n    //     return includes(task.name.toLowerCase(), keyword.toLowerCase());\n    // });\n    // if(filterName){\n    //     tasks = filter(tasks, (task) => {\n    //         return includes(task.name.toLowerCase(), filterName.toLowerCase());\n    //     });\n    // }\n    // if(filterStatus){\n    //     tasks = filter(tasks, (task) => {\n    //         if(filterStatus === '-1' || filterStatus === -1){\n    //             return task;\n    //         }else{\n    //             return task.status === (parseInt(filterStatus, 10) === 1 ? true : false);\n    //         }\n    //     });\n    // }\n    // tasks = orderBy(tasks, [sortBy], [sortValue]);\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(TaskForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: isDisplayForm === true ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(TaskControl, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      sortBy: sortBy,\n      sortValue: sortValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      filterName: filterName,\n      filterStatus: filterStatus,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-redux-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","TaskControl","connect","actions","App","constructor","props","onToggleForm","onSearch","keyword","setState","onSort","sortBy","sortValue","onFilter","filterName","filterStatus","onSelectedItem","item","itemEditing","isDisplayForm","state","render","mapStateToProps","mapDispatchToProps","dispatch","toggleForm"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport \"./App.css\"\nimport TaskList from \"./components/TaskList\"\nimport TaskForm from \"./components/TaskForm\"\nimport TaskControl from \"./components/TaskControl\"\nimport {connect} from \"react-redux\"\nimport * as actions from \"./actions/index\"\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tsortBy: \"name\",\n\t\t\tsortValue: \"asc\",\n\t\t\tfilterName: \"\",\n\t\t\tfilterStatus: \"-1\",\n\t\t\titemEditing: null\n\t\t}\n\t}\n\n\tonToggleForm = () => {\n\t\tthis.props.onToggleForm()\n\t}\n\n\tonSearch = keyword => {\n\t\tthis.setState({\n\t\t\tkeyword: keyword\n\t\t})\n\t}\n\n\tonSort = (sortBy, sortValue) => {\n\t\tthis.setState({\n\t\t\tsortBy: sortBy,\n\t\t\tsortValue: sortValue\n\t\t})\n\t}\n\n\tonFilter = (filterName, filterStatus) => {\n\t\tthis.setState({\n\t\t\tfilterName: filterName,\n\t\t\tfilterStatus: filterStatus\n\t\t})\n\t}\n\n\tonSelectedItem = item => {\n\t\tthis.setState({\n\t\t\titemEditing: item,\n\t\t\tisDisplayForm: true\n\t\t})\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tsortBy,\n\t\t\tsortValue,\n\t\t\tfilterName,\n\t\t\tfilterStatus\n\t\t} = this.state\n\t\tconst {isDisplayForm} = this.props\n\t\t// tasks = filter(tasks, (task) => {\n\t\t//     return includes(task.name.toLowerCase(), keyword.toLowerCase());\n\t\t// });\n\t\t// if(filterName){\n\t\t//     tasks = filter(tasks, (task) => {\n\t\t//         return includes(task.name.toLowerCase(), filterName.toLowerCase());\n\t\t//     });\n\t\t// }\n\t\t// if(filterStatus){\n\t\t//     tasks = filter(tasks, (task) => {\n\t\t//         if(filterStatus === '-1' || filterStatus === -1){\n\t\t//             return task;\n\t\t//         }else{\n\t\t//             return task.status === (parseInt(filterStatus, 10) === 1 ? true : false);\n\t\t//         }\n\t\t//     });\n\t\t// }\n        // tasks = orderBy(tasks, [sortBy], [sortValue]);\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1>Quản Lý Công Việc</h1>\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tisDisplayForm === true\n\t\t\t\t\t\t\t\t? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\"\n\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TaskForm />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tisDisplayForm === true\n\t\t\t\t\t\t\t\t? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n\t\t\t\t\t\t\t\t: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={this.onToggleForm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<TaskControl\n\t\t\t\t\t\t\tonSearch={this.onSearch}\n\t\t\t\t\t\t\tonSort={this.onSort}\n\t\t\t\t\t\t\tsortBy={sortBy}\n\t\t\t\t\t\t\tsortValue={sortValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TaskList\n\t\t\t\t\t\t\tfilterName={filterName}\n\t\t\t\t\t\t\tfilterStatus={filterStatus}\n\t\t\t\t\t\t\tonFilter={this.onFilter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tisDisplayForm: state.isDisplayForm\n\t}\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n\treturn {\n\t\tonToggleForm: () => {\n\t\t\tdispatch(actions.toggleForm())\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n"]},"metadata":{},"sourceType":"module"}