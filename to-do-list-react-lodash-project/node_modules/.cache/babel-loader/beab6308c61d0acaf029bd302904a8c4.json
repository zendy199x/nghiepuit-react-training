{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-project/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n        this.setState({\n          isDisplayForm: true,\n          taskEditing: null\n        });\n      } else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          taskEditing: null\n        });\n      }\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onSubmit = data => {\n      const tasks = this.state.tasks;\n\n      if (data.id === \"\") {\n        data.id = this.generateID();\n        tasks.push(data);\n      } else {\n        const index = this.findIndex(data.id);\n        tasks[index] = data;\n      }\n\n      this.setState({\n        tasks: tasks,\n        taskEditing: null\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      const tasks = this.state.tasks;\n      const index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n    };\n\n    this.findIndex = id => {\n      const tasks = this.state.tasks;\n      let result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      const tasks = this.state.tasks;\n      const index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      }\n\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      const tasks = this.state.tasks;\n      const index = this.findIndex(id);\n      const taskEditing = tasks[index];\n      this.setState({\n        taskEditing: taskEditing\n      });\n      this.onShowForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        },\n        keyword: \"\"\n      });\n    };\n\n    this.onSearch = keyword => {\n      this.setState({\n        keyword: keyword\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sort: {\n          by: sortBy,\n          value: sortValue\n        }\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false.status,\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      sortBy: '',\n      sortValue: 1\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4() + \"-\" + this.s4();\n  }\n\n  render() {\n    let _this$state = this.state,\n        tasks = _this$state.tasks,\n        isDisplayForm = _this$state.isDisplayForm,\n        taskEditing = _this$state.taskEditing,\n        filter = _this$state.filter,\n        keyword = _this$state.keyword;\n\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter(task => {\n          return task.name.toLowerCase().indexOf(keyword) !== -1;\n        });\n      }\n\n      tasks = tasks.filter(task => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n\n    if (keyword) {\n      tasks = tasks.filter(task => {\n        return task.name.toLowerCase().indexOf(keyword) !== -1;\n      });\n    }\n\n    const elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      task: taskEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }) : \"\";\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onSort: this.onSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","Control","App","constructor","props","onToggleForm","state","isDisplayForm","taskEditing","setState","onCloseForm","onShowForm","onSubmit","data","tasks","id","generateID","push","index","findIndex","localStorage","setItem","JSON","stringify","onUpdateStatus","status","result","forEach","task","onDelete","splice","onUpdate","onFilter","filterName","filterStatus","parseInt","filter","name","toLowerCase","keyword","onSearch","onSort","sortBy","sortValue","sort","by","value","UNSAFE_componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","indexOf","elmTaskForm"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport \"./App.css\"\nimport TaskList from \"./components/TaskList\"\nimport TaskForm from \"./components/TaskForm\"\nimport Control from \"./components/Control\"\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttasks: [],\n\t\t\tisDisplayForm: false.status,\n\t\t\ttaskEditing: null,\n\t\t\tfilter: {\n\t\t\t\tname: \"\",\n\t\t\t\tstatus: -1\n\t\t\t},\n            sortBy: '',\n            sortValue: 1\n\t\t}\n\t}\n\n\tUNSAFE_componentWillMount() {\n\t\tif (localStorage && localStorage.getItem(\"tasks\")) {\n\t\t\tconst tasks = JSON.parse(localStorage.getItem(\"tasks\"))\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t})\n\t\t}\n\t}\n\n\ts4() {\n\t\treturn Math.floor((1 + Math.random()) * 0x10000)\n\t\t\t.toString(16)\n\t\t\t.substring(1)\n\t}\n\n\tgenerateID() {\n\t\treturn (\n\t\t\tthis.s4() +\n\t\t\t\"-\" +\n\t\t\tthis.s4() +\n\t\t\t\"-\" +\n\t\t\tthis.s4() +\n\t\t\t\"-\" +\n\t\t\tthis.s4() +\n\t\t\t\"-\" +\n\t\t\tthis.s4() +\n\t\t\t\"-\" +\n\t\t\tthis.s4() +\n\t\t\t\"-\" +\n\t\t\tthis.s4() +\n\t\t\t\"-\" +\n\t\t\tthis.s4()\n\t\t)\n\t}\n\n\tonToggleForm = () => {\n\t\tif (this.state.isDisplayForm && this.state.taskEditing !== null) {\n\t\t\tthis.setState({\n\t\t\t\tisDisplayForm: true,\n\t\t\t\ttaskEditing: null\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisDisplayForm: !this.state.isDisplayForm,\n\t\t\t\ttaskEditing: null\n\t\t\t})\n\t\t}\n\t}\n\n\tonCloseForm = () => {\n\t\tthis.setState({\n\t\t\tisDisplayForm: false\n\t\t})\n\t}\n\n\tonShowForm = () => {\n\t\tthis.setState({\n\t\t\tisDisplayForm: true\n\t\t})\n\t}\n\n\tonSubmit = data => {\n\t\tconst {tasks} = this.state\n\t\tif (data.id === \"\") {\n\t\t\tdata.id = this.generateID()\n\t\t\ttasks.push(data)\n\t\t} else {\n\t\t\tconst index = this.findIndex(data.id)\n\t\t\ttasks[index] = data\n\t\t}\n\t\tthis.setState({\n\t\t\ttasks: tasks,\n\t\t\ttaskEditing: null\n\t\t})\n\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks))\n\t}\n\n\tonUpdateStatus = id => {\n\t\tconst {tasks} = this.state\n\t\tconst index = this.findIndex(id)\n\t\tif (index !== -1) {\n\t\t\ttasks[index].status = !tasks[index].status\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t})\n\t\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks))\n\t\t}\n\t}\n\n\tfindIndex = id => {\n\t\tconst {tasks} = this.state\n\t\tlet result = -1\n\t\ttasks.forEach((task, index) => {\n\t\t\tif (task.id === id) {\n\t\t\t\tresult = index\n\t\t\t}\n\t\t})\n\t\treturn result\n\t}\n\n\tonDelete = id => {\n\t\tconst {tasks} = this.state\n\t\tconst index = this.findIndex(id)\n\t\tif (index !== -1) {\n\t\t\ttasks.splice(index, 1)\n\t\t\tthis.setState({\n\t\t\t\ttasks: tasks\n\t\t\t})\n\t\t\tlocalStorage.setItem(\"tasks\", JSON.stringify(tasks))\n\t\t}\n\t\tthis.onCloseForm()\n\t}\n\n\tonUpdate = id => {\n\t\tconst {tasks} = this.state\n\t\tconst index = this.findIndex(id)\n\t\tconst taskEditing = tasks[index]\n\t\tthis.setState({\n\t\t\ttaskEditing: taskEditing\n\t\t})\n\t\tthis.onShowForm()\n\t}\n\n\tonFilter = (filterName, filterStatus) => {\n\t\tfilterStatus = parseInt(filterStatus)\n\t\tthis.setState({\n\t\t\tfilter: {\n\t\t\t\tname: filterName.toLowerCase(),\n\t\t\t\tstatus: filterStatus\n\t\t\t},\n\t\t\tkeyword: \"\"\n\t\t})\n\t}\n\n\tonSearch = keyword => {\n\t\tthis.setState({\n\t\t\tkeyword: keyword\n\t\t})\n    }\n    \n    onSort = (sortBy, sortValue) => {\n        this.setState({\n            sort: {\n                by: sortBy,\n                value: sortValue\n            }\n        })\n    }\n\n\trender() {\n\t\tlet {tasks, isDisplayForm, taskEditing, filter, keyword} = this.state\n\t\tif (filter) {\n\t\t\tif (filter.name) {\n\t\t\t\ttasks = tasks.filter(task => {\n\t\t\t\t\treturn task.name.toLowerCase().indexOf(keyword) !== -1\n\t\t\t\t})\n\t\t\t}\n\t\t\ttasks = tasks.filter(task => {\n\t\t\t\tif (filter.status === -1) {\n\t\t\t\t\treturn task\n\t\t\t\t} else {\n\t\t\t\t\treturn task.status === (filter.status === 1 ? true : false)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (keyword) {\n\t\t\ttasks = tasks.filter(task => {\n\t\t\t\treturn task.name.toLowerCase().indexOf(keyword) !== -1\n\t\t\t})\n\t\t}\n\n\t\tconst elmTaskForm = isDisplayForm ? (\n\t\t\t<TaskForm\n\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\tonCloseForm={this.onCloseForm}\n\t\t\t\ttask={taskEditing}\n\t\t\t/>\n\t\t) : (\n\t\t\t\"\"\n\t\t)\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1>Quản Lý Công Việc</h1>\n\t\t\t\t\t<hr />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tisDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/*Form*/}\n\t\t\t\t\t\t{elmTaskForm}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tisDisplayForm\n\t\t\t\t\t\t\t\t? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n\t\t\t\t\t\t\t\t: \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t\tonClick={this.onToggleForm}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"fa fa-plus mr-5\" />\n\t\t\t\t\t\t\tThêm Công Việc\n\t\t\t\t\t\t</button>\n\n\t\t\t\t\t\t{/*Search-Sort*/}\n\t\t\t\t\t\t<Control onSearch={this.onSearch} onSort={this.onSort} />\n\t\t\t\t\t\t{/*List*/}\n\t\t\t\t\t\t<TaskList\n\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\tonUpdateStatus={this.onUpdateStatus}\n\t\t\t\t\t\t\tonDelete={this.onDelete}\n\t\t\t\t\t\t\tonUpdate={this.onUpdate}\n\t\t\t\t\t\t\tonFilter={this.onFilter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}