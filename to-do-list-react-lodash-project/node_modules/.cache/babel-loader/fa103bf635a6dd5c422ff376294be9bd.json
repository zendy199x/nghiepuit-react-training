{"ast":null,"code":"var _jsxFileName = \"/Users/zendy/Coder/react-training/to-do-list-react-project/src/App.js\";\nimport React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onToggleForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm\n      });\n    };\n\n    this.onSubmit = data => {\n      const tasks = this.state.tasks;\n      data.id = this.generateID();\n      tasks.push(data);\n      this.setState({\n        tasks: tasks\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n\n    this.onUpdateStatus = id => {\n      const tasks = this.state.tasks;\n      const index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n    };\n\n    this.findIndex = id => {\n      const tasks = this.state.tasks;\n      let result = -1;\n      tasks.forEach((task, index) => {\n        if (task.id === id) {\n          result = index;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      const tasks = this.state.tasks;\n      const index = this.findIndex(id);\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n      }\n\n      this.onCloseForm();\n    };\n\n    this.onUpdate = id => {\n      const tasks = this.state.tasks;\n      const index = this.findIndex(id);\n    };\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false.status,\n      taskEditing: null\n    };\n  }\n\n  componentWillMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      const tasks = JSON.parse(localStorage.getItem('tasks'));\n      this.setState({\n        tasks: tasks\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n  }\n\n  render() {\n    const _this$state = this.state,\n          tasks = _this$state.tasks,\n          isDisplayForm = _this$state.isDisplayForm;\n    const elmTaskForm = isDisplayForm ? React.createElement(TaskForm, {\n      onSubmit: this.onSubmit,\n      onCloseForm: this.onCloseForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }) : '';\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Qu\\u1EA3n L\\xFD C\\xF4ng Vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, elmTaskForm), React.createElement(\"div\", {\n      className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-plus mr-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"Th\\xEAm C\\xF4ng Vi\\u1EC7c\"), React.createElement(Control, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      tasks: tasks,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zendy/Coder/react-training/to-do-list-react-project/src/App.js"],"names":["React","Component","TaskList","TaskForm","Control","App","constructor","props","onToggleForm","setState","isDisplayForm","state","onCloseForm","onSubmit","data","tasks","id","generateID","push","localStorage","setItem","JSON","stringify","onUpdateStatus","index","findIndex","status","result","forEach","task","onDelete","splice","onUpdate","taskEditing","componentWillMount","getItem","parse","s4","Math","floor","random","toString","substring","render","elmTaskForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./App.css\";\nimport TaskList from './components/TaskList';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [],\n            isDisplayForm: false.status,\n            taskEditing: null\n        }\n    }\n\n    componentWillMount() {\n        if (localStorage && localStorage.getItem('tasks')) {\n            const tasks =  JSON.parse(localStorage.getItem('tasks'));\n            this.setState({\n                tasks: tasks\n            })\n        }\n    }\n\n    s4() {\n        return Math.floor((1+Math.random()) * 0x10000).toString(16).substring(1);\n    }\n\n    generateID() {\n        return this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4();\n    }\n\n    onToggleForm = () => {\n        this.setState({\n            isDisplayForm: !this.state.isDisplayForm\n        })\n    }\n\n    onCloseForm = () => {\n        this.setState({\n            isDisplayForm: !this.state.isDisplayForm\n        })\n    }\n\n    onSubmit = (data) => {\n        const { tasks } = this.state;\n        data.id = this.generateID();\n        tasks.push(data);\n        this.setState({\n            tasks: tasks\n        })\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    onUpdateStatus = (id) => {\n        const { tasks } = this.state;\n        const index = this.findIndex(id);\n        if(index !== -1) {\n            tasks[index].status = !tasks[index].status;\n            this.setState({\n                tasks: tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks))\n        }\n    }\n\n    findIndex = (id) => {\n        const { tasks } = this.state;\n        let result = -1;\n        tasks.forEach((task, index) => {\n            if(task.id === id) {\n                result = index;\n            }\n        })\n        return result;\n    }\n\n    onDelete = (id) => {\n        const { tasks } = this.state;\n        const index = this.findIndex(id);\n        if(index !== -1) {\n            tasks.splice(index, 1);\n            this.setState({\n                tasks: tasks\n            });\n            localStorage.setItem('tasks', JSON.stringify(tasks))\n        }\n        this.onCloseForm();\n    }\n\n    onUpdate = (id) => {\n        const { tasks } = this.state;\n        const index = this.findIndex(id);\n    }\n\n    render() {\n        const { tasks, isDisplayForm } = this.state;\n        const elmTaskForm = isDisplayForm ? <TaskForm onSubmit={this.onSubmit} onCloseForm={this.onCloseForm}/> : '';\n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row\">\n                    <div className={ isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : '' }>\n                        {/*Form*/}\n                        { elmTaskForm }\n                    </div>\n                    <div className={ isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\" }>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.onToggleForm}\n                        >\n                            <span className=\"fa fa-plus mr-5\" />\n                            Thêm Công Việc\n                        </button>\n\n                        {/*Search-Sort*/}\n                        <Control />\n                        {/*List*/}\n                        <TaskList\n                            tasks={ tasks }\n                            onUpdateStatus={ this.onUpdateStatus }\n                            onDelete={ this.onDelete }\n                            onUpdate={ this.onUpdate }\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}